#Continuous integration action
# largely inspired by https://brunopaz.dev/blog/building-a-basic-ci-cd-pipeline-for-a-golang-application-using-github-actions
name: Build & Test
on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - '*'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.14.3'

      - name: Check out code
        uses: actions/checkout@v2

      - name: Lint Go Code
        run: |
          make lint
      - name: Vet Go Code
        run: |
          make vet

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.14.3'

      - name: Check out code
        uses: actions/checkout@v2

      - name: Run Unit tests.
        run: |
          make test-coverage
      
      - name: Upload Coverage report to CodeCov
        uses: codecov/codecov-action@v1.0.0
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage.txt


  build:
    runs-on: ubuntu-latest
    name: Build and Integration tests
    needs: [lint, test]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.14.3'
    - run: go mod download
    - name: Validates GO releaser config
      uses: goreleaser/goreleaser-action@master
      with:
        args: check
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@master
      with:
        args: release --snapshot --skip-publish --rm-dist
    - name: test container
      run: docker run on4kjm/flecli:latest version -d
    - name: Setup BATS
      uses: mig4/setup-bats@master
      with:
        bats-version: 1.1.0
    - name: Run End-To_end testing with the docker container
      run: bats test/bats-scripts

